package com.spgo.common;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;import org.apache.commons.lang3.time.DateFormatUtils;import org.apache.commons.lang3.time.DateUtils;public class DateUtil {	public static String formatLocalSlash(Date date) {		return DateFormatUtils.format(date, "dd/MM/yyyy");	}	public static String formatLocalDate(Date date) {		return DateFormatUtils.format(date, "MM/dd/yyyy");	}		public static String formatLocalSlashShortYear(Date date) {		return DateFormatUtils.format(date, "dd/MM/yy");	}	public static String formatLocalDashShortYear(Date date) {		return DateFormatUtils.format(date, "dd-MM-yy");	}	public static String formatHoursMinutesSeconds(Date date) {		return DateFormatUtils.format(date, "HH:mm:ss");	}	public static String formatHoursMinutes(Date date) {		return DateFormatUtils.format(date, "HH:mm");	}	public static String formatHoursMinutesAMPM(Date date) {		return DateFormatUtils.format(date, "h:mm a");	}	public static String formatLocalDash(Date date) {		return DateFormatUtils.format(date, "dd-MM-yyyy");	}	public static String formatLocalDashTime(Date date) {		return DateFormatUtils.format(date, "dd-MM-yyyy HH:mm:ss");	}	public static String formatUniversal(Date date) {		return DateFormatUtils.format(date, "yyyyMMdd");	}	public static String format(Date date, String format) {		return DateFormatUtils.format(date, format);	}	public static String formatMonthAndYear(Date date) {		return DateFormatUtils.format(date, "MMMMM ''yy");	}	public static String formatMonthShortAndYear(Date date) {		return DateFormatUtils.format(date, "MMM yyyy");	}	public static Date createDateUniversal(String dateStr)			throws ParseException {		SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMdd");		formatter.setLenient(false);		return formatter.parse(dateStr);	}	public static Date createDateTimeSlash(String dateStr)			throws ParseException {		SimpleDateFormat formatter;		if (dateStr.length() < 19) {			formatter = new SimpleDateFormat("dd/MM/yy HH:mm:ss");		} else {			formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");		}		formatter.setLenient(false);		return formatter.parse(dateStr);	}	public static Date createDateLocalSlash(String dateStr)			throws ParseException {		SimpleDateFormat formatter;		if (dateStr.length() < 10) {			formatter = new SimpleDateFormat("dd/MM/yy");		} else {			formatter = new SimpleDateFormat("dd/MM/yyyy");		}		formatter.setLenient(false);		return formatter.parse(dateStr);	}	public static Date createDateLocalDash(String dateStr)			throws ParseException {		SimpleDateFormat formatter;		if (dateStr.length() < 10) {			formatter = new SimpleDateFormat("dd-MM-yy");		} else {			formatter = new SimpleDateFormat("dd-MM-yyyy");		}		formatter.setLenient(false);		return formatter.parse(dateStr);	}	public static Date getNow() {		return new Date();	}	public static Date getToday() {		return removeHourAndMinutes(new Date());	}	public static Date removeHourAndMinutes(Date date) {		return DateUtils.truncate(date, Calendar.DATE);	}}